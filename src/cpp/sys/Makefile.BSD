##############################################################################
##
##       Copyright (C) 2023 Frank Eskesen.
##
##       This file is free content, distributed under the MIT license.
##       (See accompanying file LICENSE.MIT or the original contained
##       within https://opensource.org/licenses/MIT)
##
##############################################################################
##
## Title-
##       ~/src/cpp/sys/Makefile.BSD
##
## Purpose-
##       Installation makefile for C++ prerequisite programs
##
## Last change date-
##       2023/08/04
##
## Usage-
##       make           (Compile out of date programs)
##       make compile   (Compile out of date programs)
##       make install   ('make compile', then install to ~/bin if out of date)
##       make reinstall ('make compile', then uncondionally install to ~/bin.)
##       make clean     (Remove executable files and some ditrius.)
##       make pristine  (Restore object directory to its initial state.)
##       make uninstall ('make pristine', then remove installed ~/bin files.)
##
## Implementaton notes-
##       TODO: Implement rdconfig and wrconfig
##
##############################################################################

##############################################################################
## Set default paths
BINDIR = ../../../bin############## Binary directory
MAKDIR = M######################### Makefile directory
OBJDIR = .######################### Object directory
SRCDIR = S######################### Source directory

##############################################################################
## Include compiler option control file
ifeq "" "$(COMPILER)"
COMPILER := GCC
endif

INCSRC :=Makefile.$(COMPILER)###### Compiler Control file
ifeq "$(findstring $(OBJDIR)/$(INCSRC),$(wildcard $(OBJDIR)/Makefile.*))" "$(OBJDIR)/$(INCSRC)"
INCSRC := $(OBJDIR)/$(INCSRC)
else
INCSRC := $(MAKDIR)/$(INCSRC)
endif
include $(INCSRC)

##############################################################################
## Include standard option control file
INCSRC :=Makefile.OPT############## Default Control file
ifeq "$(findstring $(OBJDIR)/$(INCSRC),$(wildcard $(OBJDIR)/Makefile.*))" "$(OBJDIR)/$(INCSRC)"
INCSRC := $(OBJDIR)/$(INCSRC)
else
INCSRC := $(MAKDIR)/$(INCSRC)
endif
include $(INCSRC)

##############################################################################
## Set default rules
vpath

.SUFFIXES:
.SUFFIXES: .o
## Make% : ;
## make% : ;

% : %.o
	$(LD) -o $@ $< $(CLOAD) $(CLIBS)

%.o : $(SRCDIR)/%.cpp
	$(CC) -o $@ -c $<  $(CFLAGS)

##############################################################################
## Default source, executable and object files
MAKSRC := $(wildcard $(SRCDIR)/*.cpp)
MAKEXE := $(patsubst $(SRCDIR)/%.cpp,$(OBJDIR)/%,$(MAKSRC))
MAKOBJ := $(patsubst $(SRCDIR)/%.cpp,$(OBJDIR)/%.o,$(MAKSRC))

## Remove placeholder executables
MAKEXE := $(patsubst $(OBJDIR)/rdconfig,,$(MAKEXE))
MAKEXE := $(patsubst $(OBJDIR)/wrconfig,,$(MAKEXE))

##############################################################################
## Set default targets
ifeq "" "$(DEFAULT)"
DEFAULT:= $(MAKEXE)
endif

.PHONY: compile
compile: $(DEFAULT)
	strip filecomp
	strip makeproj

.PHONY: recompile
recompile: pristine compile

##############################################################################
## TARGETS: install, install-filecomp install-makeproj
.PHONY: install install-filecomp install-makeproj
install: install-filecomp install-makeproj

install-filecomp: $(BINDIR)/filecomp
install-makeproj: $(BINDIR)/makeproj

$(BINDIR)/filecomp: filecomp
	cp -fp filecomp $(BINDIR)/.

$(BINDIR)/makeproj: makeproj
	cp -fp makeproj $(BINDIR)/.

##############################################################################
## TARGETS: reinstall, reinstall-filecomp reinstall-makeproj
.PHONY: reinstall reinstall-filecomp reinstall-makeproj
reinstall: reinstall-filecomp reinstall-makeproj

reinstall-filecomp: recompile
	cp -fp filecomp $(BINDIR)/.

reinstall-makeproj: recompile
	cp -fp makeproj $(BINDIR)/.

##############################################################################
## TARGET: uninstall
.PHONY: uninstall
uninstall: pristine
	-@rm $(BINDIR)/filecomp            >/dev/null 2>/dev/null
	-@rm $(BINDIR)/makeproj            >/dev/null 2>/dev/null

##############################################################################
## TARGET: pristine, clean
.PHONY: pristine clean
pristine: clean
	-@rm *.lst *.o *.stackdump         >/dev/null 2>/dev/null
	-@rm $(OBJDIR)/filecomp            >/dev/null 2>/dev/null
	-@rm $(OBJDIR)/makeproj            >/dev/null 2>/dev/null

clean: ;
	-@rm $(MAKEXE)                     >/dev/null 2>/dev/null
	-@rm *.map                         >/dev/null 2>/dev/null
	-@rm core errs                     >/dev/null 2>/dev/null
