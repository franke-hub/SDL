##############################################################################
##
##       Copyright (c) 2007-2021 Frank Eskesen.
##
##       This file is free content, distributed under the "un-license,"
##       explicitly released into the Public Domain.
##       (See accompanying file LICENSE.UNLICENSE or the original
##       contained within http://unlicense.org)
##
##############################################################################
##
## Title-
##       Makefile.GCC
##
## Purpose-
##       Default GCC compiler controls
##
## Last change date-
##       2021/09/02
##
##############################################################################

##############################################################################
## CC       (Compiler identifier)
AR     := ar -r ################### Archiver: ar
CC     := c++ ##################### Compiler: gnu C++
LD     := c++ ##################### Loader: gnu C++

##############################################################################
## System include directory
INCSYS :=/usr/include############## Default Include directory

##############################################################################
## CDEFS    (Compiler definitions)
CDEFS  +=########################## C defines
CDEFS  += -D_CC_GCC################ CC == GCC

##############################################################################
## COPTS    (Compiler options)
ifneq "" "$(OPTIMIZE)"
COPTS  += $(OPTIMIZE)############## Customized optimization

else
COPTS  += -g -O3################### Default, debugging, full optimization
COPTS  += -finline-functions####### Optimize out inline functions
endif

COPTS  += -std=gnu++17############# Use C++17 standard (gnu version)
###### += -ansi ################### ANSI level
###### += -mlong64################# 64 bit longs (DOESN'T WORK)
###### += -mno-fp-regs############# Don't use FP registers
###### += -fexceptions############# Enable try/catch exception handling
################################### (Conflicts with -O3)

################################### Warnings (-Wall/extras commented out)
COPTS  += -Wall ################### Activate all standard warnings
COPTS  += -Wextra ################# Activate extra warnings
COPTS  += -Werror ################# Treat warnings as errors
###### += -Wchar-subscripts ####### Array subscript of type char
###### += -Wcomment ############### Comment within a comment
###### += -Wconversion ############ Implicit conversion can change value
###### += -Wdangling-else ######### Possible if-else confusion
###### += -Wfatal-errors ########## Abort on first error
###### += -Wformat ################ Extensive printf, etc. checking
###### += -Wimplicit ############## Implicit function or parameter
COPTS  += -Wmissing-declarations ## Global function has no prototype
###### += -Wno-deprecated########## Don't warn about deprecated usage
###### += -Wreturn-type ########### Implicit return type
###### += -Wshadow ################ Disallow shadow variables
###### += -Wswitch ################ Switch, enumerated index lacks case
COPTS  += -Wswitch-default ######## Switch, missing default case
###### += -Wtemplate-debugging #### C++ only
###### += -Wtrigraphs ############# Trigraphs encountered
###### += -Wuninitialized########## Variable used before being set
###### += -Wunused################# Unused variable or function

################################### Listing control
ifneq "" "$(LISTING)"
COPTS  += -Wa,-ahl=$*.lst ######### Generate listing
endif

ifneq "" "$(LINKMAP)"
CLOAD  += -Wl,-Map -Wl,$*.map ##### Generate linker map
endif

##############################################################################
## CLIBS    (Loader libraries, set in Makefile.OPT)

##############################################################################
## CLOAD    (Linker variables, set in Makefile.OPT)

