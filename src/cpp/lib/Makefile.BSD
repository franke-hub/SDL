##############################################################################
##
##       Copyright (c) 2007-2024 Frank Eskesen.
##
##       This file is free content, distributed under the MIT license.
##       (See accompanying file LICENSE.MIT or the original contained
##       within https://opensource.org/licenses/MIT)
##
##############################################################################
##
## Title-
##       ~/src/cpp/lib/Makefile.BSD
##
## Purpose-
##       CYGWIN/LINUX Makefile customization.
##
## Last change date-
##       2024/03/01
##
## Implementation notes-
##       Note that for Cygwin, shared libraries MUST BE included in the
##       PATH environment variable instead of LD_LIBRARY_PATH.
##
## Implementation notes-
##       TARGET: install    Install C++ static and shared libraries
##       TARGET: uninstall  Remove C++ static and shared libraries
##
##       TARGET: lib   Create static library (Cygwin/Linux)
##       TARGET: shr   Create shared library (Cygwin/Linux)
##           shr.dll   Create shared library (Cygwin only)
##
##############################################################################

##############################################################################
## Disable the build executable rule (to simplify Makefile debugging.)
% : %.o

##############################################################################
## $SDL_ROOT is the base directory, containing
##    ./bat ./bin ./src/cpp/lib and ./obj/cpp/lib/.
## $SDL_ROOT/obj/cpp/lib must be the current (invoking) directory.
ifeq "" "$(SDL_ROOT)"
SDL_ROOT := ../../..
endif
LIB_SOURCE := $(SDL_ROOT)/bat/sys/.want-version

##############################################################################
## Set default target
ifeq "" "$(DEFAULT)"
DEFAULT := all
endif

.PHONY: all default install lib shr shr.dll
default: $(DEFAULT)

all: lib shr
lib shr shr.dll: ;
install: all
shr: lib

ifeq "CYGWIN" "$(findstring CYGWIN,$(shell uname))"
all: shr.dll
shr.dll: shr
endif

.PHONY: echo
echo: ;
	@echo LIB_SOURCE $(LIB_SOURCE)
	@echo COM_SOURCE $(COM_SOURCE)
	@echo
	ls -alF $(LIB_SOURCE)

##############################################################################
## TARGET: $(SHARED) $(STATIC)
SHARED := shared
STATIC := static

~/.local/lib: ;
	mkdir -p $@

~/.local/lib/sdlc++: ~/.local/lib
	$(shell [ ! -L "$@" ] && (cd ~/.local/lib; ln -s $(PWD)/$(SHARED) $(@F)))

$(SHARED): ~/.local/lib/sdlc++

$(SHARED): ; ######################### (Should already exist)
	$(shell [ ! -d "$@" ] && mkdir $@) ## (Should not be needed)

$(STATIC): ; ######################### (Should already exist)
	$(shell [ ! -d "$@" ] && mkdir $@) ## (Should not be needed)

##############################################################################
## PATTERNS
$(OBJDIR)/%.dll: $(OBJDIR)/%.so.1.0
	$(shell [ ! -L "$(@F)" ] && ln -s $(<F) $(@F))
	touch $@

$(OBJDIR)/%.so: $(OBJDIR)/%.so.1.0
	$(shell [ ! -L "$(@F)" ] && ln -s $(<F) $(@F))
	touch $@

$(SHARED)/%.dll: $(SHARED)/%.so.1.0
	$(shell [ ! -L "$@" ] && (cd $(<D); ln -s $(<F) $(@F)))
	touch $@

$(SHARED)/%.so: $(SHARED)/%.so.1.0
	$(shell [ ! -L "$@" ] && (cd $(<D); ln -s $(<F) $(@F)))
	touch $@

.SECONDARY: $(OBJDIR)/.so
$(SHARED)/%.so: $(OBJDIR)/%.so

$(SHARED)/%.so.1.0: $(OBJDIR)/%.so.1.0
	cp -Lpf $< $@
	touch $@

.SECONDARY: $(OBJDIR)/.so
$(SHARED)/%.so.1.0: $(OBJDIR)/%.so

$(STATIC)/%.a: $(OBJDIR)/%.a
	cp -Lpf $< $@
	touch $@

## Build order dependencies (Library order set in */Makefile.DIR)
%(SHARED)/%.so:  $(STATIC)/%.a
%(SHARED)/%.so:  $(OBJDIR)/%.so
%(SHARED)/%.dll: $(OBJDIR)/%.dll
%(STATIC)/%.a:   $(OBJDIR)/%.a

##############################################################################
## TARGETS: update dependable
##############################################################################
.PHONY: update dependable
update: dependable $(MAKRUN)

dependable: ;
	@($(MAKE) depend)

##############################################################################
## Cleanup
.PHONY: uninstall
uninstall: pristine

.PHONY: lib.pristine
pristine: lib.pristine
lib.pristine: ;
	@rm -f $(SHARED)/lib*
	@rm -f $(STATIC)/lib*

.PHONY: lib.clean
clean: lib.clean
lib.clean: ;
	@rm -f lib*

##############################################################################
## Include subdirectories
include $(SRCDIR)/com/Makefile.DIR
include $(SRCDIR)/dev/Makefile.DIR
include $(SRCDIR)/gui/Makefile.DIR
include $(SRCDIR)/obj/Makefile.DIR
include $(SRCDIR)/pub/Makefile.DIR
