##############################################################################
##
##       Copyright (c) 2007-2023 Frank Eskesen.
##
##       This file is free content, distributed under the MIT license.
##       (See accompanying file LICENSE.MIT or the original contained
##       within https://opensource.org/licenses/MIT)
##
##############################################################################
##
## Title-
##       Makefile.BSD
##
## Purpose-
##       CYGWIN/LINUX Makefile customization.
##
## Last change date-
##       2023/12/03
##
##############################################################################

##############################################################################
## Local options (-fPIC, but not on CYGWIN)
ifneq "CYGWIN" "$(findstring CYGWIN,$(shell uname))"
COPTS  += -fPIC ################### Generate position independent code
endif

##############################################################################
## Set targets
ifeq "" "$(MAKRUN)"
MAKRUN := dll
MAKRUN := lib
endif

ifeq "" "$(DEFAULT)"
DEFAULT := $(MAKRUN)
endif

.PHONY: default dll lib all
default: $(DEFAULT)
dll: configure libcom.so.1.0
lib: configure libcom.a
all: dll lib

##############################################################################
## TARGET: configure
.PHONY: configure
configure: ;
	@../../../../bat/sys/configure.sh src/cpp/lib/com

##############################################################################
## TARGET: update
.PHONY: update
EXISTS := $(shell _exists.sh "libcom.so.1.0")

ifeq "$(MAKRUN)" "lib"
update: default
	@echo update lib complete MAKRUN $(MAKRUN)
else ifeq "$(EXISTS)" "true"
update: default
	@echo update dll complete MAKRUN $(MAKRUN)
else
update: ;
	@echo update dll not required MAKRUN $(MAKRUN)
endif

##############################################################################
## Explicit rule to make assembler source, listing (NO OUTPUT)
AS     := as ###################### Assembler

%.s : $(SRCDIR)/%.cpp
	$(CC) -o $@ -S $(CFLAGS) -c $<

%.lst : %.s
	$(AS) -o /dev/null -a=$@ $<

Atomic.s : $(SRCDIR)/HW/X86/Atomic.GNU
Hardware.s : $(SRCDIR)/HW/X86/Hardware.GNU

##############################################################################
## TARGET: libcom.so.1.0, libcom.so, libcom.dll
ifneq "" "$(LINKMAP)"
LINKMAP := -Wl,-Map -Wl,libcom.map ## Generate linker map
endif

libcom.so.1.0: $(MAKOBJ)
	$(CC) $(LINKMAP) -shared -o $@ $^ -lbz2 -lncurses -lpthread -lz -lc
	touch $@

libcom.so: libcom.so.1.0
	$(shell [ ! -L "$@" ] && ln -s $< $@)

libcom.dll: libcom.so.1.0
	$(shell [ ! -L "$@" ] && ln -s $< $@)

##############################################################################
## TARGET: libcom.a
libcom.a: $(MAKOBJ)
	$(AR) $@ $^
	touch $@

##############################################################################
## Dependencies
ifneq "" "$(DEPENDS)"
Makeproj.dep: $(wildcard $(INCDIR)/com/*)
Makeproj.dep: $(wildcard $(SRCDIR)/*)
Makeproj.dep: $(wildcard $(SRCDIR)/HW/STD/*)
Makeproj.dep: $(wildcard $(SRCDIR)/HW/X86/*)
Makeproj.dep: $(wildcard $(SRCDIR)/OS/BSD/*)
Makeproj.dep: $(wildcard $(SRCDIR)/OS/CYGWIN/*)
endif

##############################################################################
## Cleanup
.PHONY: com.clean.bsd com.pristine.bsd
clean: com.clean.bsd
com.clean.bsd: ;
	-@rm -f libcom.a >/dev/null 2>/dev/null
	-@rm -f libcom.so* libcom.dll >/dev/null 2>/dev/null

pristine: com.pristine.bsd
com.pristine.bsd: ;
	-@rm -f _have.version >/dev/null 2>/dev/null
