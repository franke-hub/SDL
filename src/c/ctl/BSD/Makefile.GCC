##############################################################################
##
##       Copyright (c) 2007-2018 Frank Eskesen.
##
##       This file is free content, distributed under creative commons CC0,
##       explicitly released into the Public Domain.
##       (See accompanying html file LICENSE.ZERO or the original contained
##       within https://creativecommons.org/publicdomain/zero/1.0/legalcode)
##
##############################################################################
## Makefile.GCC (GCC Compiler controls)
##############################################################################

##############################################################################
## CC       (Compiler identifier)
AR     := ar -r ################### Archiver: ar
CC     := cc  ##################### Compiler: gnu C++
LD     := cc  ##################### Loader: gnu C++

##############################################################################
## System include directory
INCSYS :=/usr/include############## Default Include directory

##############################################################################
## CDEFS    (Compiler definitions)
CDEFS  +=########################## C defines
CDEFS  += -D_CC_GCC################ CC == GCC

##############################################################################
## COPTS    (Compiler options)
ifneq "" "$(OPTIMIZE)"
COPTS  += $(OPTIMIZE)############## Customized optimization

else
COPTS  += -g -O3################### Default, debugging, full optimization
COPTS  += -finline-functions####### Optimize out inline functions
ignore += -Wno-deprecated########## Don't warn about deprecated usage
COPTS  += -Wuninitialized########## Variable used before being set
COPTS  += -Wunused################# Unused variable or function
endif

ignore += -ansi ################### ANSI level
ignore += -mlong64################# 64 bit longs (DOESN'T WORK)
ignore += -mno-fp-regs############# Don't use FP registers
ignore += -fexceptions############# Enable try/catch exception handling
################################### (Conflicts with -O3)

################################### Warnings
ignore += -Wall ################### Activate the following warnings
ignore += -W ###################### Extra warnings for some events
COPTS  += -Wchar-subscripts ####### Array subscript of type char
COPTS  += -Wcomment ############### Comment within a comment
COPTS  += -Wformat ################ Extensive printf, etc. checking
COPTS  += -Wimplicit ############## Implicit function or parameter
COPTS  += -Wreturn-type ########### Implicit return type
COPTS  += -Wswitch ################ Switch, enumerated index lacks case
ignore += -Wtemplate-debugging #### C++ only
COPTS  += -Wtrigraphs ############# Trigraphs encountered

ignore += -Wcast-qual ############# Attempt to remove type qualifier
COPTS  += -Werror ################# Treat warnings as errors
ignore += -Wmissing-prototypes #### Extern function has no prototype
COPTS  += -Wstrict-prototypes ##### A function not in prototype format

################################### Listing control
ifneq "" "$(LISTING)"
COPTS  += -Wa,-ahl=$*.lst ######### Generate listing
endif

##############################################################################
## CLIBS    (Loader libraries)
ignore += -lc ##################### Standard C Library
ignore += -lcurses ################ CURSES Library
ignore += -lm ##################### Mathlib, Security
ignore += -lncurses ############### New CURSES Library
ignore += -lpthread ############### Thread Library
ignore += -ls ##################### Security
ignore += -lX11 ################### Standard X Library

##############################################################################
## CLOAD    (Linker variables)

